"use strict";(self.webpackChunkspringwolf_docs=self.webpackChunkspringwolf_docs||[]).push([[427],{5162:(e,a,n)=>{n.d(a,{Z:()=>i});var t=n(7294),o=n(6010);const r="tabItem_Ymn6";function i(e){let{children:a,hidden:n,className:i}=e;return t.createElement("div",{role:"tabpanel",className:(0,o.Z)(r,i),hidden:n},a)}},4866:(e,a,n)=>{n.d(a,{Z:()=>N});var t=n(7462),o=n(7294),r=n(6010),i=n(2466),s=n(6775),l=n(1980),p=n(7392),d=n(12);function u(e){return function(e){return o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:a,label:n,attributes:t,default:o}}=e;return{value:a,label:n,attributes:t,default:o}}))}function c(e){const{values:a,children:n}=e;return(0,o.useMemo)((()=>{const e=a??u(n);return function(e){const a=(0,p.l)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,n])}function m(e){let{value:a,tabValues:n}=e;return n.some((e=>e.value===a))}function g(e){let{queryString:a=!1,groupId:n}=e;const t=(0,s.k6)(),r=function(e){let{queryString:a=!1,groupId:n}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:a,groupId:n});return[(0,l._X)(r),(0,o.useCallback)((e=>{if(!r)return;const a=new URLSearchParams(t.location.search);a.set(r,e),t.replace({...t.location,search:a.toString()})}),[r,t])]}function h(e){const{defaultValue:a,queryString:n=!1,groupId:t}=e,r=c(e),[i,s]=(0,o.useState)((()=>function(e){let{defaultValue:a,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!m({value:a,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const t=n.find((e=>e.default))??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:a,tabValues:r}))),[l,p]=g({queryString:n,groupId:t}),[u,h]=function(e){let{groupId:a}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(a),[t,r]=(0,d.Nk)(n);return[t,(0,o.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:t}),f=(()=>{const e=l??u;return m({value:e,tabValues:r})?e:null})();(0,o.useLayoutEffect)((()=>{f&&s(f)}),[f]);return{selectedValue:i,selectValue:(0,o.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);s(e),p(e),h(e)}),[p,h,r]),tabValues:r}}var f=n(2389);const k="tabList__CuJ",y="tabItem_LNqP";function v(e){let{className:a,block:n,selectedValue:s,selectValue:l,tabValues:p}=e;const d=[],{blockElementScrollPositionUntilNextRender:u}=(0,i.o5)(),c=e=>{const a=e.currentTarget,n=d.indexOf(a),t=p[n].value;t!==s&&(u(a),l(t))},m=e=>{let a=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=d.indexOf(e.currentTarget)+1;a=d[n]??d[0];break}case"ArrowLeft":{const n=d.indexOf(e.currentTarget)-1;a=d[n]??d[d.length-1];break}}a?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},a)},p.map((e=>{let{value:a,label:n,attributes:i}=e;return o.createElement("li",(0,t.Z)({role:"tab",tabIndex:s===a?0:-1,"aria-selected":s===a,key:a,ref:e=>d.push(e),onKeyDown:m,onClick:c},i,{className:(0,r.Z)("tabs__item",y,i?.className,{"tabs__item--active":s===a})}),n??a)})))}function b(e){let{lazy:a,children:n,selectedValue:t}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(a){const e=r.find((e=>e.props.value===t));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},r.map(((e,a)=>(0,o.cloneElement)(e,{key:a,hidden:e.props.value!==t}))))}function w(e){const a=h(e);return o.createElement("div",{className:(0,r.Z)("tabs-container",k)},o.createElement(v,(0,t.Z)({},e,a)),o.createElement(b,(0,t.Z)({},e,a)))}function N(e){const a=(0,f.Z)();return o.createElement(w,(0,t.Z)({key:String(a)},e))}},2343:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>u,contentTitle:()=>p,default:()=>g,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var t=n(7462),o=(n(7294),n(3905)),r=n(4866),i=n(5162),s=n(614);const l={sidebar_position:68},p="Messages",d={unversionedId:"configuration/documenting-messages",id:"configuration/documenting-messages",title:"Messages",description:"Springwolf provides different ways to document the messages. The message is part of the AsyncApi operationObject",source:"@site/docs/configuration/documenting-messages.md",sourceDirName:"configuration",slug:"/configuration/documenting-messages",permalink:"/docs/configuration/documenting-messages",draft:!1,editUrl:"https://github.com/springwolf/springwolf.github.io/edit/master/docs/configuration/documenting-messages.md",tags:[],version:"current",sidebarPosition:68,frontMatter:{sidebar_position:68},sidebar:"tutorialSidebar",previous:{title:"Bindings",permalink:"/docs/configuration/documenting-bindings"},next:{title:"Customizing",permalink:"/docs/configuration/customizing"}},u={},c=[{value:"Payload Type",id:"payload-type",level:2},{value:"Unwrapping the Payload",id:"unwrapping-the-payload",level:3},{value:"Schema",id:"schema",level:2},{value:"Using <code>@Schema</code>",id:"using-schema",level:3},{value:"Usage",id:"usage",level:3},{value:"<code>json-schema</code>",id:"json-schema",level:3},{value:"Custom ModelConverters",id:"custom-modelconverters",level:2}],m={toc:c};function g(e){let{components:a,...n}=e;return(0,o.kt)("wrapper",(0,t.Z)({},m,n,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"messages"},"Messages"),(0,o.kt)("p",null,"Springwolf provides different ways to document the messages. The ",(0,o.kt)("inlineCode",{parentName:"p"},"message")," is part of the AsyncApi ",(0,o.kt)("inlineCode",{parentName:"p"},"operationObject")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"A definition of the message that will be published or received by this operation")),(0,o.kt)("p",null,"A message can be defined as part of the ",(0,o.kt)("inlineCode",{parentName:"p"},"@AsyncOperation")," annotation, using ",(0,o.kt)("inlineCode",{parentName:"p"},"message = @AsyncMessage()")," field."),(0,o.kt)("p",null,"For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'@AsyncPublisher(operation = @AsyncOperation(\n        channelName = "example-producer-topic",\n        description = "Optional. Customer uploaded an example payload",\n        payloadType = ExamplePayloadDto.class, // optional\n        message = @AsyncMessage(\n                messageId = "my-unique-id",\n                name = "ExamplePayloadDto",\n                schemaFormat = "application/schema+json;version=draft-07",\n                description = "Example payload model for sending messages"\n        )\n))\npublic void sendMessage(ExamplePayloadDto msg) {\n    // send\n}\n')),(0,o.kt)("h2",{id:"payload-type"},"Payload Type"),(0,o.kt)("p",null,"Springwolf tries to auto-detect the payload type based on the method signature."),(0,o.kt)("p",null,"When the method has multiple arguments, the payload can be indicated via ",(0,o.kt)("inlineCode",{parentName:"p"},"@Payload"),", i.e."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"public void sendMessage(@Payload ExamplePayloadDto msg, String traceId, Object loggingContext) {}\n")),(0,o.kt)("p",null,"Alternatively, the annotation property ",(0,o.kt)("inlineCode",{parentName:"p"},"payloadType")," of ",(0,o.kt)("inlineCode",{parentName:"p"},"@AsyncOperation")," allows to overwrite the detected class."),(0,o.kt)("h3",{id:"unwrapping-the-payload"},"Unwrapping the Payload"),(0,o.kt)("p",null,"Sometimes, the payload type is wrapped in other objects.\nSome wrappers are automatically unwrapped, including ",(0,o.kt)("inlineCode",{parentName:"p"},"Message<String>"),", which becomes ",(0,o.kt)("inlineCode",{parentName:"p"},"String"),"."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("a",{parentName:"p",href:"/docs/configuration/"},"configuration property")," to modify the defaults is currently in ",(0,o.kt)("em",{parentName:"p"},"beta"),".")),(0,o.kt)("p",null,"Assuming a method signature of ",(0,o.kt)("inlineCode",{parentName:"p"},"sendMessage(Function<Void, String> msg)"),", where the actual payload is located in parameter index 1 (String).\nAdding the configuration property ",(0,o.kt)("inlineCode",{parentName:"p"},"springwolf.payload.extractable-classes.java.util.function.Function=1")," tells Springwolf how to handle this payload type."),(0,o.kt)("p",null,"The configuration property is split into three parts.\nFirst, the base property ",(0,o.kt)("inlineCode",{parentName:"p"},"springwolf.payload.extractable-classes"),".\nSecond, the canonical class name, ",(0,o.kt)("inlineCode",{parentName:"p"},"java.util.function.Function")," in this case.\nAnd third, the generic parameter index (",(0,o.kt)("inlineCode",{parentName:"p"},"1"),")."),(0,o.kt)("h2",{id:"schema"},"Schema"),(0,o.kt)("p",null,"Under the hood Springwolf relies on swagger-core ",(0,o.kt)("inlineCode",{parentName:"p"},"ModelConverters")," to define the message schema."),(0,o.kt)("p",null,"By default, the type and example values for the properties are guessed.\nThe default Jackson ",(0,o.kt)("inlineCode",{parentName:"p"},"ModelResolver")," supports schema definitions via ",(0,o.kt)("inlineCode",{parentName:"p"},"@Schema")," to overwrite the property definitions."),(0,o.kt)("h3",{id:"using-schema"},"Using ",(0,o.kt)("inlineCode",{parentName:"h3"},"@Schema")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"@Schema")," annotation allows to set many properties like ",(0,o.kt)("inlineCode",{parentName:"p"},"description"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"example"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"requiredMode")," to document payloads."),(0,o.kt)("p",null,"All properties are part of the produced AsyncApi file. However, not all are displayed in ",(0,o.kt)("inlineCode",{parentName:"p"},"springwolf-ui"),". The ones listed above are included."),(0,o.kt)("h3",{id:"usage"},"Usage"),(0,o.kt)("p",null,"Add the following dependency:"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"Groovy",label:"Groovy",default:!0,mdxType:"TabItem"},(0,o.kt)(s.Z,{language:"groovy",mdxType:"CodeBlock"},"dependencies {\n    implementation 'io.swagger.core.v3:swagger-core:2.2.10'\n}")),(0,o.kt)(i.Z,{value:"Maven",label:"Maven",mdxType:"TabItem"},(0,o.kt)(s.Z,{language:"xml",mdxType:"CodeBlock"},"<dependencies>\n    <dependency>\n        <groupId>io.swagger.core.v3</groupId>\n        <artifactId>swagger-core</artifactId>\n        <version>2.2.10</version>\n    </dependency>\n</dependencies>"))),(0,o.kt)("p",null,"Then, add the ",(0,o.kt)("inlineCode",{parentName:"p"},"@Schema")," annotation to the payload class:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'import io.swagger.v3.oas.annotations.media.Schema;\nimport static io.swagger.v3.oas.annotations.media.Schema.RequiredMode.REQUIRED;\n\n@Schema(description = "Example payload model")\npublic class ExamplePayloadDto {\n    @Schema(description = "Some string field", example = "some string value", requiredMode = REQUIRED)\n    private String someString;\n\n    public String getSomeString() {\n        return someString;\n    }\n}\n')),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"@AsyncMessage.description")," field will always override the ",(0,o.kt)("inlineCode",{parentName:"p"},"@Schema")," description if provided")),(0,o.kt)("p",null,"For a full example, take a look at ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/springwolf/springwolf-core/blob/master/springwolf-examples/springwolf-amqp-example/src/main/java/io/github/stavshamir/springwolf/example/amqp/dtos/ExamplePayloadDto.java"},"ExamplePayloadDto.java in ",(0,o.kt)("inlineCode",{parentName:"a"},"springwolf-amqp-example"))),(0,o.kt)("h3",{id:"json-schema"},(0,o.kt)("inlineCode",{parentName:"h3"},"json-schema")),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/springwolf/springwolf-core/tree/master/springwolf-add-ons/springwolf-json-schema"},(0,o.kt)("inlineCode",{parentName:"a"},"springwolf-add-ons/springwolf-json-schema"))," adds the ",(0,o.kt)("a",{parentName:"p",href:"https://json-schema.org"},"json-schema")," schema to the AsyncApi document. "),(0,o.kt)("h2",{id:"custom-modelconverters"},"Custom ModelConverters"),(0,o.kt)("p",null,"Additionally, custom ",(0,o.kt)("inlineCode",{parentName:"p"},"ModelConverters")," are supported.\nThese are needed when swagger is unable to extract a schema from a class."),(0,o.kt)("p",null,"One example is ",(0,o.kt)("inlineCode",{parentName:"p"},"javax.money.MonetaryAmount"),".\nAdding a model converter is demoed in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/springwolf/springwolf-core/tree/master/springwolf-add-ons/springwolf-common-model-converters"},(0,o.kt)("inlineCode",{parentName:"a"},"springwolf-add-ons/springwolf-common-model-converters"))))}g.isMDXComponent=!0}}]);