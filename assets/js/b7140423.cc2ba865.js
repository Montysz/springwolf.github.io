"use strict";(self.webpackChunkspringwolf_docs=self.webpackChunkspringwolf_docs||[]).push([[586],{4519:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var s=i(5893),a=i(1151);const o={sidebar_position:60},t="Consumers",r={id:"configuration/documenting-consumers",title:"Consumers",description:"Springwolf comes with build-in support to auto-detect listeners of supported protocols.",source:"@site/docs/configuration/documenting-consumers.md",sourceDirName:"configuration",slug:"/configuration/documenting-consumers",permalink:"/docs/configuration/documenting-consumers",draft:!1,unlisted:!1,editUrl:"https://github.com/springwolf/springwolf.github.io/edit/master/docs/configuration/documenting-consumers.md",tags:[],version:"current",sidebarPosition:60,frontMatter:{sidebar_position:60},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/docs/configuration/"},next:{title:"Producers",permalink:"/docs/configuration/documenting-producers"}},d={},c=[{value:"Option 1: <code>@AsyncListener</code>",id:"option-1-asynclistener",level:2},{value:"Channel Name",id:"channel-name",level:3},{value:"Description",id:"description",level:3},{value:"Header",id:"header",level:3},{value:"Servers",id:"servers",level:3},{value:"Option 2: <code>ConsumerData</code> (deprecated)",id:"option-2-consumerdata-deprecated",level:2},{value:"Channel Name",id:"channel-name-1",level:3},{value:"Description",id:"description-1",level:3},{value:"Binding",id:"binding",level:3},{value:"Payload Type",id:"payload-type",level:3},{value:"Header",id:"header-1",level:3},{value:"<code>AmqpConsumerData</code>",id:"amqpconsumerdata",level:3},{value:"<code>KafkaConsumerData</code>",id:"kafkaconsumerdata",level:3},{value:"Option 3: <code>@JmsListener</code>, <code>@KafkaListener</code>, <code>@RabbitListener</code>, <code>@SqsListener</code>",id:"option-3-jmslistener-kafkalistener-rabbitlistener-sqslistener",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"consumers",children:"Consumers"}),"\n",(0,s.jsx)(n.p,{children:"Springwolf comes with build-in support to auto-detect listeners of supported protocols."}),"\n",(0,s.jsx)(n.p,{children:"Sometimes projects are configured in a way that makes Springwolf unable to automatically locate consumers or the generated documentation is insufficient.\nFor these use-cases, Springwolf provides additional ways to explicitly add them to the generated document."}),"\n",(0,s.jsx)(n.p,{children:"To document consumers, either:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["add the ",(0,s.jsx)(n.code,{children:"@AsyncListener"})," annotation or"]}),"\n",(0,s.jsxs)(n.li,{children:["(deprecated) declare the ",(0,s.jsx)(n.code,{children:"ConsumerData"})," object as part of the ",(0,s.jsx)(n.code,{children:"AsyncApiDocket"})," or"]}),"\n",(0,s.jsxs)(n.li,{children:["rely on the auto-detection of ",(0,s.jsx)(n.code,{children:"@JmsListener"}),", ",(0,s.jsx)(n.code,{children:"@KafkaListener"}),", ",(0,s.jsx)(n.code,{children:"@RabbitListener"}),", ",(0,s.jsx)(n.code,{children:"@SqsListener"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["You are free to use all options together. Per channel and operation, first ",(0,s.jsx)(n.code,{children:"ConsumerData"})," is used, then ",(0,s.jsx)(n.code,{children:"@AsyncListener"})," and last the auto-detected annotations."]}),"\n",(0,s.jsxs)(n.h2,{id:"option-1-asynclistener",children:["Option 1: ",(0,s.jsx)(n.code,{children:"@AsyncListener"})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"@AsyncListener"})," annotation is added to the method of the listeners and extracts the payload from its arguments.\nAdditional fields can be documented."]}),"\n",(0,s.jsxs)(n.p,{children:["The protocol operation binding is configured via ",(0,s.jsx)(n.code,{children:"@AmqpAsyncOperationBinding"}),", ",(0,s.jsx)(n.code,{children:"@KafkaAsyncOperationBinding"})," or ",(0,s.jsx)(n.code,{children:"@AsyncGenericOperationBinding"}),", which has to be on the same method."]}),"\n",(0,s.jsx)(n.p,{children:"Below is an example to demonstrate the annotation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@KafkaListener\n@AsyncListener(operation = @AsyncOperation(\n        channelName = "example-consumer-topic",\n        description = "Optional. Customer uploaded an example payload",\n        servers = {"kafka"},\n        headers = @AsyncOperation.Headers(\n                schemaName = "SpringKafkaDefaultHeaders",\n                values = {\n                        @AsyncOperation.Headers.Header(\n                                name = DEFAULT_CLASSID_FIELD_NAME,\n                                description = "Spring Type Id Header",\n                                value = "io.github.stavshamir.springwolf.example.dtos.ExamplePayloadDto"\n                        ),\n                        // (demonstrating https://cloudevents.io) \n                        @AsyncOperation.Headers.Header(\n                                name = AsyncHeadersCloudEventConstants.TYPE,\n                                description = AsyncHeadersCloudEventConstants.TYPE_DESC,\n                                value = "NestedPayloadDto.v1")\n                        // ...\n                }\n        )\n))\n@KafkaAsyncOperationBinding\npublic void receiveMessage(ExamplePayloadDto msg) {\n    // process\n}\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Springwolf only finds methods that are within the ",(0,s.jsx)(n.code,{children:"base-package"}),"."]})}),"\n",(0,s.jsx)(n.h3,{id:"channel-name",children:"Channel Name"}),"\n",(0,s.jsx)(n.p,{children:"The channel name (or topic name in case of Kafka) - this is the name that will be used to subscribe to messages to by the UI."}),"\n",(0,s.jsx)(n.h3,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:["Optional. The description allows for human-friendly text to verbosely explain the ",(0,s.jsx)(n.em,{children:"message"}),", like specific domain, what the topic is used for and which data it contains."]}),"\n",(0,s.jsx)(n.h3,{id:"header",children:"Header"}),"\n",(0,s.jsx)(n.p,{children:"Optional. The headers describing the metadata of the payload."}),"\n",(0,s.jsx)(n.h3,{id:"servers",children:"Servers"}),"\n",(0,s.jsxs)(n.p,{children:["Optional. Useful when an application is connect to multiple brokers and wants to indicate to which broker the channel belongs to.\nThe server needs to exist in ",(0,s.jsx)(n.a,{href:"/docs/configuration/",children:"configuration > Servers"})," as well."]}),"\n",(0,s.jsxs)(n.h2,{id:"option-2-consumerdata-deprecated",children:["Option 2: ",(0,s.jsx)(n.code,{children:"ConsumerData"})," (deprecated)"]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Must use configuration via ",(0,s.jsx)(n.code,{children:"AsyncApiDocket"})," and can't use ",(0,s.jsx)(n.code,{children:"application.properties"}),"."]})}),"\n",(0,s.jsx)(n.p,{children:"Below is an example of describing a Kafka consumer:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Bean\npublic AsyncApiDocket asyncApiDocket() {\n\n    ConsumerData exampleConsumerData = ConsumerData.builder()\n            .channelName("example-consumer-topic")\n            .description("Optional. Customer uploaded an example payload")\n            .operationBinding(ImmutableMap.of("kafka", new KafkaOperationBinding()))\n            .payloadType(ExamplePayloadDto.class)\n            .headers(AsyncHeaders.NOT_USED)\n            .build();\n  \n    return AsyncApiDocket.builder()\n            .basePackage(...)\n            .info(...)\n            .server(...)\n            .consumer(exampleConsumerData)\n            .build();\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Multiple consumers can be configured by calling the ",(0,s.jsx)(n.code,{children:"consumer()"})," method multiple times."]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["Use specific ConsumerData types ",(0,s.jsx)(n.code,{children:"AmqpConsumerData"})," & ",(0,s.jsx)(n.code,{children:"KafkaConsumerData"})," for protocol specific attributes"]})}),"\n",(0,s.jsx)(n.h3,{id:"channel-name-1",children:"Channel Name"}),"\n",(0,s.jsx)(n.p,{children:"The channel name (or topic name in case of Kafka) - this is the name that will be used to subscribe to messages to by the UI."}),"\n",(0,s.jsx)(n.h3,{id:"description-1",children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:["Optional. The description allows for human-friendly text to verbosely explain the ",(0,s.jsx)(n.em,{children:"message"}),", like specific domain, what the topic is used for and which data it contains."]}),"\n",(0,s.jsx)(n.h3,{id:"binding",children:"Binding"}),"\n",(0,s.jsxs)(n.p,{children:["This property is used to discriminate the producer's protocol and provide protocol-specific properties (see ",(0,s.jsx)(n.a,{href:"/docs/configuration/documenting-bindings",children:"documenting bindings"}),")."]}),"\n",(0,s.jsx)(n.h3,{id:"payload-type",children:"Payload Type"}),"\n",(0,s.jsx)(n.p,{children:"The class object of the payload that will be consumed from this channel."}),"\n",(0,s.jsx)(n.h3,{id:"header-1",children:"Header"}),"\n",(0,s.jsxs)(n.p,{children:["Optional. The headers describing the metadata of the payload.\nBy default, ",(0,s.jsx)(n.code,{children:"AsyncHeaders.NOT_DOCUMENTED"})," is used to indicate that no explicit header documentation exists.\nUse ",(0,s.jsx)(n.code,{children:"AsyncHeaders"})," to add your custom headers, use ",(0,s.jsx)(n.code,{children:"AsyncHeaders.NOT_USED"})," if you don't use headers and ",(0,s.jsx)(n.code,{children:"AsyncHeadersForCloudEventsBuilder"})," if your events follow the CloudEvent specification."]}),"\n",(0,s.jsx)(n.h3,{id:"amqpconsumerdata",children:(0,s.jsx)(n.code,{children:"AmqpConsumerData"})}),"\n",(0,s.jsxs)(n.p,{children:["The above Kafka ",(0,s.jsx)(n.code,{children:"ConsumerData"})," equivalent in ",(0,s.jsx)(n.code,{children:"AmqpConsumerData"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'    AmqpConsumerData exampleConsumer = AmqpConsumerData.amqpConsumerDataBuilder()\n        .queueName("example-consumer-channel")\n        .description("example-consumer-channel-description")\n        .exchangeName("example-topic-exchange")\n        .routingKey("example-topic-routing-key")\n        .payloadType(AnotherPayloadDto.class)\n        .build();\n'})}),"\n",(0,s.jsx)(n.h3,{id:"kafkaconsumerdata",children:(0,s.jsx)(n.code,{children:"KafkaConsumerData"})}),"\n",(0,s.jsxs)(n.p,{children:["The above Kafka ",(0,s.jsx)(n.code,{children:"ConsumerData"})," simplifies to the following ",(0,s.jsx)(n.code,{children:"KafkaConsumerData"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'    KafkaConsumerData exampleConsumerData = KafkaConsumerData.kafkaConsumerDataBuilder()\n        .topicName("example-consumer-topic")\n        .description("Optional. Customer uploaded an example payload")\n        .payloadType(ExamplePayloadDto.class)\n        .headers(AsyncHeaders.NOT_USED)\n        .build();\n'})}),"\n",(0,s.jsxs)(n.h2,{id:"option-3-jmslistener-kafkalistener-rabbitlistener-sqslistener",children:["Option 3: ",(0,s.jsx)(n.code,{children:"@JmsListener"}),", ",(0,s.jsx)(n.code,{children:"@KafkaListener"}),", ",(0,s.jsx)(n.code,{children:"@RabbitListener"}),", ",(0,s.jsx)(n.code,{children:"@SqsListener"})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"@JmsListener"}),", ",(0,s.jsx)(n.code,{children:"@KafkaListener"}),", ",(0,s.jsx)(n.code,{children:"@RabbitListener"}),", ",(0,s.jsx)(n.code,{children:"@SqsListener"})," annotations are detected automatically.\nThere is nothing more to do.\nUse the other options if the provided documentation is insufficient."]})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>r,a:()=>t});var s=i(7294);const a={},o=s.createContext(a);function t(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);