"use strict";(self.webpackChunkspringwolf_docs=self.webpackChunkspringwolf_docs||[]).push([[475],{1622:function(e,n,a){a.r(n),a.d(n,{frontMatter:function(){return r},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var t=a(7462),o=a(3366),i=(a(7294),a(3905)),s=["components"],r={sidebar_position:4},l="Maually Documenting Consumers",c={unversionedId:"manually-documenting-consumers",id:"manually-documenting-consumers",isDocsHomePage:!1,title:"Maually Documenting Consumers",description:"Sometimes projects are configured in a way that makes Springwolf unable to automatically locate consumers, producers are defined imperatively (They don't have the @KafkaListener or @RabbitListener annotations on the consuming methods).",source:"@site/docs/manually-documenting-consumers.md",sourceDirName:".",slug:"/manually-documenting-consumers",permalink:"/docs/manually-documenting-consumers",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/manually-documenting-consumers.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Documenting Producers",permalink:"/docs/documenting-producers"},next:{title:"Supported Protocols",permalink:"/docs/supported-protocols"}},u=[{value:"ConsumerData",id:"consumerdata",children:[{value:"Channel Name",id:"channel-name",children:[],level:3},{value:"Binding",id:"binding",children:[],level:3},{value:"Payload Type",id:"payload-type",children:[],level:3}],level:2},{value:"Example",id:"example",children:[],level:2}],m={toc:u};function p(e){var n=e.components,a=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,t.Z)({},m,a,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"maually-documenting-consumers"},"Maually Documenting Consumers"),(0,i.kt)("p",null,"Sometimes projects are configured in a way that makes Springwolf unable to automatically locate consumers, producers are defined imperatively (They don't have the ",(0,i.kt)("inlineCode",{parentName:"p"},"@KafkaListener")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"@RabbitListener")," annotations on the consuming methods)."),(0,i.kt)("p",null,"Because there is still immense value in documenting the consumers, Springwolf provides a way to explicitly add them to the generated document, by declaring them in the ",(0,i.kt)("inlineCode",{parentName:"p"},"AsyncApiDocket")," using the ",(0,i.kt)("inlineCode",{parentName:"p"},"ConsumerData")," object."),(0,i.kt)("h2",{id:"consumerdata"},"ConsumerData"),(0,i.kt)("p",null,"Below is an example of describing a Kafka consumer:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@Bean\npublic AsyncApiDocket asyncApiDocket() {\n\n    ConsumerData exampleConsumerData = ConsumerData.builder()\n            .channelName("example-consumer-topic")\n            .operationBinding(ImmutableMap.of("kafka", new KafkaOperationBinding()))\n            .payloadType(ExamplePayloadDto.class)\n            .build();\n  \n    return AsyncApiDocket.builder()\n            .basePackage(...)\n            .info(...)\n            .server(...)\n            .consumer(exampleConsumerData)\n            .build();\n}\n')),(0,i.kt)("h3",{id:"channel-name"},"Channel Name"),(0,i.kt)("p",null,"The channel name (or topic name in case of Kafka) - this is the name that will be used to subscribe to messages to by the UI."),(0,i.kt)("h3",{id:"binding"},"Binding"),(0,i.kt)("p",null,"This property is used to discriminate the consumer's protocl and provide protocol-specific properties (see ",(0,i.kt)("a",{parentName:"p",href:"https://www.asyncapi.com/docs/specifications/v2.0.0#operationBindingsObject"},"Operation Binding Object"),")."),(0,i.kt)("h3",{id:"payload-type"},"Payload Type"),(0,i.kt)("p",null,"The class object of the payload that will published to this channel."),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,"See a full example ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/springwolf/springwolf-core/blob/master/springwolf-examples/springwolf-kafka-example/src/main/java/io/github/stavshamir/springwolf/example/configuration/AsyncApiConfiguration.java"},"here"),"."))}p.isMDXComponent=!0}}]);