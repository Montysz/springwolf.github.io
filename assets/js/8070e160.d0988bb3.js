"use strict";(self.webpackChunkspringwolf_docs=self.webpackChunkspringwolf_docs||[]).push([[651],{2257:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var i=t(7462),a=t(3366),o=(t(7294),t(3905)),r=["components"],l={sidebar_position:2},s="Quickstart",p={unversionedId:"quickstart",id:"quickstart",isDocsHomePage:!1,title:"Quickstart",description:"* You can see and run a full working example for kafka and rabbitmq. *",source:"@site/docs/quickstart.md",sourceDirName:".",slug:"/quickstart",permalink:"/docs/quickstart",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/quickstart.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/introduction"},next:{title:"Configuration",permalink:"/docs/configuration"}},c=[{value:"Dependencies",id:"dependencies",children:[],level:2},{value:"Configuration Class",id:"configuration-class",children:[],level:2},{value:"View the docs",id:"view-the-docs",children:[],level:2}],u={toc:c};function d(e){var n=e.components,t=(0,a.Z)(e,r);return(0,o.kt)("wrapper",(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"quickstart"},"Quickstart"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"}," You can see and run a full working example for ",(0,o.kt)("a",{parentName:"strong",href:"https://github.com/springwolf/springwolf-core/tree/master/springwolf-examples/springwolf-kafka-example"},"kafka")," and ",(0,o.kt)("a",{parentName:"strong",href:"https://github.com/springwolf/springwolf-core/tree/master/springwolf-examples/springwolf-amqp-example"},"rabbitmq"),". ")),(0,o.kt)("p",null,"Assuming you have a ",(0,o.kt)("inlineCode",{parentName:"p"},"@KafkaListener")," like the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'@Service\npublic class ExampleConsumer {\n\n    @KafkaListener(topics = "example-topic", containerFactory = "exampleKafkaListenerContainerFactory")\n    public void receiveExamplePayload(ExamplePayloadDto payload) {\n        // Do something with payload\n    }\n\n}\n')),(0,o.kt)("p",null,"Follow the instructions below, and Springwolf will automatically pick up its metadata and generate documentation for it."),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("p",null,"Add the following dependencies:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-groovy"},"dependencies {\n    // Provides the documentation API    \n    implementation 'io.github.springwolf:springwolf-core:0.4.0'\n    \n    // Provides the UI - optional (recommended)\n    runtimeOnly 'io.github.springwolf:springwolf-ui:0.3.0'\n}\n")),(0,o.kt)("h2",{id:"configuration-class"},"Configuration Class"),(0,o.kt)("p",null,"Add the following configuration class."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Make sure to change the value of ",(0,o.kt)("inlineCode",{parentName:"em"},"CONSUMERS_BASE_PACKAGE")," to the package containing your Kafka listeners."),"  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'@Configuration\n@EnableAsyncApi\npublic class AsyncApiConfiguration {\n\n    private final String BOOTSTRAP_SERVERS = "kafka:29092";\n    private final String CONSUMERS_BASE_PACKAGE = "io.github.stavshamir.springwolf.example.consumers";\n\n    @Bean\n    public AsyncApiDocket asyncApiDocket() {\n        Info info = Info.builder()\n                .version("1.0.0")\n                .title("Springwolf example project")\n                .build();\n\n        Server kafkaServer = Server.builder()\n            .protocol("kafka")\n            .url(BOOTSTRAP_SERVERS)\n            .build();\n\n        return AsyncApiDocket.builder()\n                .basePackage(CONSUMERS_BASE_PACKAGE)\n                .info(info)\n                .server("kafka", kafkaServer)\n                .build();\n    }\n\n}\n')),(0,o.kt)("h2",{id:"view-the-docs"},"View the docs"),(0,o.kt)("p",null,"After starting the application, visit ",(0,o.kt)("inlineCode",{parentName:"p"},"<host>:<port>/springwolf/asyncapi-ui.html")," to view the UI or ",(0,o.kt)("inlineCode",{parentName:"p"},"<host>:<port>/springwolf/docs")," to view the raw AsyncAPI document."),(0,o.kt)("p",null,"If you configured a different context path in your application, make sure to prepend it to springwolf urls, i.e. ",(0,o.kt)("inlineCode",{parentName:"p"},"<host>:<port>/<context-path>/springwolf/asyncapi-ui.html")))}d.isMDXComponent=!0}}]);