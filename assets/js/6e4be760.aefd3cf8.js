"use strict";(self.webpackChunkspringwolf_docs=self.webpackChunkspringwolf_docs||[]).push([[47],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=s(n),u=a,g=m["".concat(p,".").concat(u)]||m[u]||d[u]||o;return n?r.createElement(g,l(l({ref:t},c),{},{components:n})):r.createElement(g,l({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},285:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:15},l="Supported Protocols",i={unversionedId:"introduction/supported-protocols",id:"introduction/supported-protocols",title:"Supported Protocols",description:"Besides auto-detection of protocols (native support),",source:"@site/docs/introduction/supported-protocols.md",sourceDirName:"introduction",slug:"/introduction/supported-protocols",permalink:"/docs/introduction/supported-protocols",draft:!1,editUrl:"https://github.com/springwolf/springwolf.github.io/edit/master/docs/introduction/supported-protocols.md",tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/introduction/"},next:{title:"Quickstart",permalink:"/docs/quickstart"}},p={},s=[{value:"Native Support",id:"native-support",level:2},{value:"Any protocol",id:"any-protocol",level:2},{value:"<code>springwolf-generic-binding</code> add-on",id:"springwolf-generic-binding-add-on",level:3}],c={toc:s};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"supported-protocols"},"Supported Protocols"),(0,a.kt)("p",null,"Besides auto-detection of protocols (native support),\nany protocol can be defined using Springwolf custom annotations ",(0,a.kt)("inlineCode",{parentName:"p"},"@AsyncListener")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"@AsyncPublisher"),"."),(0,a.kt)("h2",{id:"native-support"},"Native Support"),(0,a.kt)("p",null,"The following protocols are supported natively:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Protocol"),(0,a.kt)("th",{parentName:"tr",align:null},"Auto-detected annotations"),(0,a.kt)("th",{parentName:"tr",align:null},"Example Project"),(0,a.kt)("th",{parentName:"tr",align:null},"Latest Plugin Version"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"AMQP (RabbitMQ)"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"@RabbitListener")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/springwolf/springwolf-core/tree/master/springwolf-examples/springwolf-amqp-example"},(0,a.kt)("inlineCode",{parentName:"a"},"springwolf-amqp-example"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("img",{parentName:"td",src:"https://img.shields.io/maven-central/v/io.github.springwolf/springwolf-amqp?color=green&label=springwolf-amqp&style=plastic",alt:"Maven Central"}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Cloud Functions"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"@Bean")," (functional interface)"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/springwolf/springwolf-core/tree/master/springwolf-examples/springwolf-cloud-stream-example"},(0,a.kt)("inlineCode",{parentName:"a"},"springwolf-cloud-stream"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("img",{parentName:"td",src:"https://img.shields.io/maven-central/v/io.github.springwolf/springwolf-cloud-stream?color=green&label=springwolf-cloud-stream&style=plastic",alt:"Maven Central"}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"JMS"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"@JmsListener")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/springwolf/springwolf-core/tree/master/springwolf-examples/springwolf-jms-example"},(0,a.kt)("inlineCode",{parentName:"a"},"springwolf-jms-example"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("img",{parentName:"td",src:"https://img.shields.io/maven-central/v/io.github.springwolf/springwolf-jms?color=green&label=springwolf-jms&style=plastic",alt:"Maven Central"}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Kafka"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"@KafkaListener"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"@KafkaHandler")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/springwolf/springwolf-core/tree/master/springwolf-examples/springwolf-kafka-example"},(0,a.kt)("inlineCode",{parentName:"a"},"springwolf-kafka-example"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("img",{parentName:"td",src:"https://img.shields.io/maven-central/v/io.github.springwolf/springwolf-kafka?color=green&label=springwolf-kafka&style=plastic",alt:"Maven Central"}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"SNS"),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/springwolf/springwolf-core/tree/master/springwolf-examples/springwolf-sns-example"},(0,a.kt)("inlineCode",{parentName:"a"},"springwolf-sns-example"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("img",{parentName:"td",src:"https://img.shields.io/maven-central/v/io.github.springwolf/springwolf-sns?color=green&label=springwolf-sns&style=plastic",alt:"Maven Central"}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"SQS"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"@SqsListener")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/springwolf/springwolf-core/tree/master/springwolf-examples/springwolf-sqs-example"},(0,a.kt)("inlineCode",{parentName:"a"},"springwolf-sqs-example"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("img",{parentName:"td",src:"https://img.shields.io/maven-central/v/io.github.springwolf/springwolf-sqs?color=green&label=springwolf-sqs&style=plastic",alt:"Maven Central"}))))),(0,a.kt)("p",null,"Check out the example projects, which include a full ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose")," setup.\nThe examples are simple, easy to start with, good for testing and reproducing bugs."),(0,a.kt)("p",null,"Please ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/springwolf/springwolf-core/issues/new"},"open an issue")," if you want a protocol to be supported."),(0,a.kt)("h2",{id:"any-protocol"},"Any protocol"),(0,a.kt)("p",null,"Using ",(0,a.kt)("a",{parentName:"p",href:"/docs/configuration/documenting-consumers"},(0,a.kt)("inlineCode",{parentName:"a"},"@AsyncListener"))," and ",(0,a.kt)("a",{parentName:"p",href:"/docs/configuration/documenting-producers"},(0,a.kt)("inlineCode",{parentName:"a"},"@AsyncPublisher"))," any protocol can be documented, although the binding in the AsyncApi document will remain empty."),(0,a.kt)("p",null,"The protocols with native support come along with a ",(0,a.kt)("inlineCode",{parentName:"p"},"@_ProtocolName_Binding")," annotation to define protocol specific properties."),(0,a.kt)("h3",{id:"springwolf-generic-binding-add-on"},(0,a.kt)("inlineCode",{parentName:"h3"},"springwolf-generic-binding")," add-on"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"springwolf-generic-binding")," add-on allows to document any binding.\nThis includes bindings not supported by Springwolf, but also any custom fields not part of the AsyncApi specification."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'@AsyncPublisher(...)\n@AsyncGenericOperationBinding(\n    type = "custom-protocol-binding",\n    fields = {\n            "internal-field=customValue", \n            "nested.key=nestedValue"})\npublic void sendMessage(AnotherPayloadDto msg) {\n    // publish message\n}\n')))}d.isMDXComponent=!0}}]);