"use strict";(self.webpackChunkspringwolf_docs=self.webpackChunkspringwolf_docs||[]).push([[586],{3905:(e,n,a)=>{a.d(n,{Zo:()=>d,kt:()=>u});var t=a(7294);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function r(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=t.createContext({}),p=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):r(r({},n),e)),a},d=function(e){var n=p(e.components);return t.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=p(a),u=i,h=m["".concat(s,".").concat(u)]||m[u]||c[u]||o;return a?t.createElement(h,r(r({ref:n},d),{},{components:a})):t.createElement(h,r({ref:n},d))}));function u(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=a.length,r=new Array(o);r[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var p=2;p<o;p++)r[p]=a[p];return t.createElement.apply(null,r)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},2334:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var t=a(7462),i=(a(7294),a(3905));const o={sidebar_position:60},r="Consumers",l={unversionedId:"configuration/documenting-consumers",id:"configuration/documenting-consumers",title:"Consumers",description:"Springwolf comes with build-in support to auto-detect listeners of supported protocols.",source:"@site/docs/configuration/documenting-consumers.md",sourceDirName:"configuration",slug:"/configuration/documenting-consumers",permalink:"/docs/configuration/documenting-consumers",draft:!1,editUrl:"https://github.com/springwolf/springwolf.github.io/edit/master/docs/configuration/documenting-consumers.md",tags:[],version:"current",sidebarPosition:60,frontMatter:{sidebar_position:60},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/docs/configuration/"},next:{title:"Producers",permalink:"/docs/configuration/documenting-producers"}},s={},p=[{value:"Option 1: <code>@AsyncListener</code>",id:"option-1-asynclistener",level:2},{value:"Channel Name",id:"channel-name",level:3},{value:"Description",id:"description",level:3},{value:"Payload Type",id:"payload-type",level:3},{value:"Header",id:"header",level:3},{value:"<code>@AmqpAsyncOperationBinding</code>",id:"amqpasyncoperationbinding",level:3},{value:"<code>@KafkaAsyncOperationBinding</code>",id:"kafkaasyncoperationbinding",level:3},{value:"Option 2: <code>ConsumerData</code> (deprecated)",id:"option-2-consumerdata-deprecated",level:2},{value:"Channel Name",id:"channel-name-1",level:3},{value:"Description",id:"description-1",level:3},{value:"Binding",id:"binding",level:3},{value:"Payload Type",id:"payload-type-1",level:3},{value:"Header",id:"header-1",level:3},{value:"<code>AmqpConsumerData</code>",id:"amqpconsumerdata",level:3},{value:"<code>KafkaConsumerData</code>",id:"kafkaconsumerdata",level:3},{value:"Option 3: <code>@KafkaListener</code>, <code>@RabbitListener</code>, <code>@SqsListener</code>",id:"option-3-kafkalistener-rabbitlistener-sqslistener",level:2},{value:"AMQP Parameters",id:"amqp-parameters",level:2},{value:"Queue Name (Channel Name)",id:"queue-name-channel-name",level:3},{value:"Description",id:"description-2",level:3},{value:"Exchange Name",id:"exchange-name",level:3},{value:"Routing Key",id:"routing-key",level:3},{value:"Payload Type",id:"payload-type-2",level:3},{value:"Kafka Parameters",id:"kafka-parameters",level:2},{value:"Topic Name (Channel Name)",id:"topic-name-channel-name",level:3},{value:"Description",id:"description-3",level:3},{value:"Payload Type",id:"payload-type-3",level:3},{value:"Headers",id:"headers",level:3},{value:"Examples",id:"examples",level:2}],d={toc:p};function c(e){let{components:n,...a}=e;return(0,i.kt)("wrapper",(0,t.Z)({},d,a,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"consumers"},"Consumers"),(0,i.kt)("p",null,"Springwolf comes with build-in support to auto-detect listeners of supported protocols."),(0,i.kt)("p",null,"Sometimes projects are configured in a way that makes Springwolf unable to automatically locate consumers or the generated documentation is insufficient.\nFor these use-cases, Springwolf provides additional ways to explicitly add them to the generated document."),(0,i.kt)("p",null,"To document consumers, either:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"add the ",(0,i.kt)("inlineCode",{parentName:"li"},"@AsyncListener")," annotation or"),(0,i.kt)("li",{parentName:"ul"},"(deprecated) declare the ",(0,i.kt)("inlineCode",{parentName:"li"},"ConsumerData")," object as part of the ",(0,i.kt)("inlineCode",{parentName:"li"},"AsyncApiDocket")," or"),(0,i.kt)("li",{parentName:"ul"},"rely on the auto-detection of ",(0,i.kt)("inlineCode",{parentName:"li"},"@KafkaListener"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"@RabbitListener"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"@SqsListener"))),(0,i.kt)("p",null,"You are free to use all options together. Per channel and operation, first ",(0,i.kt)("inlineCode",{parentName:"p"},"ConsumerData")," is used, then ",(0,i.kt)("inlineCode",{parentName:"p"},"@AsyncListener")," and last the auto-detected annotations."),(0,i.kt)("h2",{id:"option-1-asynclistener"},"Option 1: ",(0,i.kt)("inlineCode",{parentName:"h2"},"@AsyncListener")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"@AsyncListener")," annotation is added to the method of the listeners and extracts the payload from its arguments.\nAdditional fields can be documented."),(0,i.kt)("p",null,"The protocol operation binding is configured via ",(0,i.kt)("inlineCode",{parentName:"p"},"@AmqpAsyncOperationBinding"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"@KafkaAsyncOperationBinding")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"@AsyncGenericOperationBinding"),", which has to be on the same method."),(0,i.kt)("p",null,"Below is an example to demonstrate the annotation:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@KafkaListener\n@AsyncListener(operation = @AsyncOperation(\n        channelName = "example-consumer-topic",\n        description = "Optional. Customer uploaded an example payload",\n        headers = @AsyncOperation.Headers(\n                schemaName = "SpringKafkaDefaultHeaders",\n                values = {\n                        @AsyncOperation.Headers.Header(\n                                name = DEFAULT_CLASSID_FIELD_NAME,\n                                description = "Spring Type Id Header",\n                                value = "io.github.stavshamir.springwolf.example.dtos.ExamplePayloadDto"\n                        ),\n                }\n        )\n))\n@KafkaAsyncOperationBinding\npublic void receiveMessage(ExamplePayloadDto msg) {\n    // process\n}\n')),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Springwolf only finds methods that are within the ",(0,i.kt)("inlineCode",{parentName:"p"},"base-package"),".")),(0,i.kt)("h3",{id:"channel-name"},"Channel Name"),(0,i.kt)("p",null,"The channel name (or topic name in case of Kafka) - this is the name that will be used to subscribe to messages to by the UI."),(0,i.kt)("h3",{id:"description"},"Description"),(0,i.kt)("p",null,"Optional. The description allows for human-friendly text to verbosely explain the ",(0,i.kt)("em",{parentName:"p"},"message"),", like specific domain, what the topic is used for and which data it contains."),(0,i.kt)("h3",{id:"payload-type"},"Payload Type"),(0,i.kt)("p",null,"The class object of the payload that will be consumed from this channel.\nIf not specified, it's extracted from the method arguments."),(0,i.kt)("h3",{id:"header"},"Header"),(0,i.kt)("p",null,"Optional. The headers describing the metadata of the payload."),(0,i.kt)("h3",{id:"amqpasyncoperationbinding"},(0,i.kt)("inlineCode",{parentName:"h3"},"@AmqpAsyncOperationBinding")),(0,i.kt)("p",null,"Associate this operation with AMQP, see ",(0,i.kt)("a",{parentName:"p",href:"https://www.asyncapi.com/docs/reference/specification/v2.0.0#operationBindingsObject"},"operation-binding")," for details."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@AmqpAsyncOperationBinding(cc = "example-topic-routing-key")\n')),(0,i.kt)("h3",{id:"kafkaasyncoperationbinding"},(0,i.kt)("inlineCode",{parentName:"h3"},"@KafkaAsyncOperationBinding")),(0,i.kt)("p",null,"Associate this operation with Kafka, see ",(0,i.kt)("a",{parentName:"p",href:"https://www.asyncapi.com/docs/reference/specification/v2.0.0#operationBindingsObject"},"operation-binding")," for details."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@KafkaAsyncOperationBinding(\n        bindingVersion = "1",\n        clientId = "foo-clientId",\n        groupId = "#{\'foo-groupId\'}"\n)\n')),(0,i.kt)("h2",{id:"option-2-consumerdata-deprecated"},"Option 2: ",(0,i.kt)("inlineCode",{parentName:"h2"},"ConsumerData")," (deprecated)"),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Must use configuration via ",(0,i.kt)("inlineCode",{parentName:"p"},"AsyncApiDocket")," and can't use ",(0,i.kt)("inlineCode",{parentName:"p"},"application.properties"),".")),(0,i.kt)("p",null,"Below is an example of describing a Kafka consumer:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@Bean\npublic AsyncApiDocket asyncApiDocket() {\n\n    ConsumerData exampleConsumerData = ConsumerData.builder()\n            .channelName("example-consumer-topic")\n            .description("Optional. Customer uploaded an example payload")\n            .operationBinding(ImmutableMap.of("kafka", new KafkaOperationBinding()))\n            .payloadType(ExamplePayloadDto.class)\n            .headers(AsyncHeaders.NOT_USED)\n            .build();\n  \n    return AsyncApiDocket.builder()\n            .basePackage(...)\n            .info(...)\n            .server(...)\n            .consumer(exampleConsumerData)\n            .build();\n}\n')),(0,i.kt)("p",null,"Multiple consumers can be configured by calling the ",(0,i.kt)("inlineCode",{parentName:"p"},"consumer()")," method multiple times."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Use specific ConsumerData types ",(0,i.kt)("inlineCode",{parentName:"p"},"AmqpConsumerData")," & ",(0,i.kt)("inlineCode",{parentName:"p"},"KafkaConsumerData")," for protocol specific attributes")),(0,i.kt)("h3",{id:"channel-name-1"},"Channel Name"),(0,i.kt)("p",null,"The channel name (or topic name in case of Kafka) - this is the name that will be used to subscribe to messages to by the UI."),(0,i.kt)("h3",{id:"description-1"},"Description"),(0,i.kt)("p",null,"Optional. The description allows for human-friendly text to verbosely explain the ",(0,i.kt)("em",{parentName:"p"},"message"),", like specific domain, what the topic is used for and which data it contains."),(0,i.kt)("h3",{id:"binding"},"Binding"),(0,i.kt)("p",null,"This property is used to discriminate the producer's protocol and provide protocol-specific properties (see ",(0,i.kt)("a",{parentName:"p",href:"https://www.asyncapi.com/docs/reference/specification/v2.0.0#operationBindingsObject"},"operation-binding"),"))."),(0,i.kt)("h3",{id:"payload-type-1"},"Payload Type"),(0,i.kt)("p",null,"The class object of the payload that will be consumed from this channel."),(0,i.kt)("h3",{id:"header-1"},"Header"),(0,i.kt)("p",null,"Optional. The headers describing the metadata of the payload.\nBy default, ",(0,i.kt)("inlineCode",{parentName:"p"},"AsyncHeaders.NOT_DOCUMENTED")," is used to indicate that no explicit header documentation exists.\nUse ",(0,i.kt)("inlineCode",{parentName:"p"},"AsyncHeaders")," to add your custom headers, use ",(0,i.kt)("inlineCode",{parentName:"p"},"AsyncHeaders.NOT_USED")," if you don't use headers and ",(0,i.kt)("inlineCode",{parentName:"p"},"AsyncHeadersForCloudEventsBuilder")," if your events follow the CloudEvent specification."),(0,i.kt)("h3",{id:"amqpconsumerdata"},(0,i.kt)("inlineCode",{parentName:"h3"},"AmqpConsumerData")),(0,i.kt)("p",null,"The above Kafka ",(0,i.kt)("inlineCode",{parentName:"p"},"ConsumerData")," equivalent in ",(0,i.kt)("inlineCode",{parentName:"p"},"AmqpConsumerData"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'    AmqpConsumerData exampleConsumer = AmqpConsumerData.amqpConsumerDataBuilder()\n        .queueName("example-consumer-channel")\n        .description("example-consumer-channel-description")\n        .exchangeName("example-topic-exchange")\n        .routingKey("example-topic-routing-key")\n        .payloadType(AnotherPayloadDto.class)\n        .build();\n')),(0,i.kt)("h3",{id:"kafkaconsumerdata"},(0,i.kt)("inlineCode",{parentName:"h3"},"KafkaConsumerData")),(0,i.kt)("p",null,"The above Kafka ",(0,i.kt)("inlineCode",{parentName:"p"},"ConsumerData")," simplifies to the following ",(0,i.kt)("inlineCode",{parentName:"p"},"KafkaConsumerData"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'    KafkaConsumerData exampleConsumerData = KafkaConsumerData.kafkaConsumerDataBuilder()\n        .topicName("example-consumer-topic")\n        .description("Optional. Customer uploaded an example payload")\n        .payloadType(ExamplePayloadDto.class)\n        .headers(AsyncHeaders.NOT_USED)\n        .build();\n')),(0,i.kt)("h2",{id:"option-3-kafkalistener-rabbitlistener-sqslistener"},"Option 3: ",(0,i.kt)("inlineCode",{parentName:"h2"},"@KafkaListener"),", ",(0,i.kt)("inlineCode",{parentName:"h2"},"@RabbitListener"),", ",(0,i.kt)("inlineCode",{parentName:"h2"},"@SqsListener")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"@KafkaListener"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"@RabbitListener"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"@SqsListener")," annotations are detected automatically.\nThere is nothing more to do.\nUse the other options if the provided documentation is insufficient."),(0,i.kt)("h2",{id:"amqp-parameters"},"AMQP Parameters"),(0,i.kt)("h3",{id:"queue-name-channel-name"},"Queue Name (Channel Name)"),(0,i.kt)("p",null,"The queue name that will be used to consume messages from."),(0,i.kt)("h3",{id:"description-2"},"Description"),(0,i.kt)("p",null,"Optional. The description allows for human-friendly text to verbosely explain the ",(0,i.kt)("em",{parentName:"p"},"message"),", like specific domain, what the topic is used for and which data it contains."),(0,i.kt)("h3",{id:"exchange-name"},"Exchange Name"),(0,i.kt)("p",null,"The exchange name that will be used to bind queues to."),(0,i.kt)("h3",{id:"routing-key"},"Routing Key"),(0,i.kt)("p",null,"The routing key used when publishing a message."),(0,i.kt)("h3",{id:"payload-type-2"},"Payload Type"),(0,i.kt)("p",null,"The class object of the payload that will be consumed from this channel."),(0,i.kt)("h2",{id:"kafka-parameters"},"Kafka Parameters"),(0,i.kt)("h3",{id:"topic-name-channel-name"},"Topic Name (Channel Name)"),(0,i.kt)("p",null,"The topic name that will be used to consume messages from."),(0,i.kt)("h3",{id:"description-3"},"Description"),(0,i.kt)("p",null,"Optional. The description allows for human-friendly text to verbosely explain the ",(0,i.kt)("em",{parentName:"p"},"message"),", like specific domain, what the topic is used for and which data it contains."),(0,i.kt)("h3",{id:"payload-type-3"},"Payload Type"),(0,i.kt)("p",null,"The class object of the payload that will be consumed from this channel."),(0,i.kt)("h3",{id:"headers"},"Headers"),(0,i.kt)("p",null,"The Kafka headers describing the metadata of the payload, more details in the generic ConsumerData."),(0,i.kt)("p",null,"The Springwolf Kafka plugin comes with a special ",(0,i.kt)("inlineCode",{parentName:"p"},"AsyncHeadersForSpringKafkaBuilder")," to document the ",(0,i.kt)("inlineCode",{parentName:"p"},"__TypeId__")," header of the ",(0,i.kt)("inlineCode",{parentName:"p"},"spring-kafka")," dependency."),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/springwolf/springwolf-core/blob/master/springwolf-examples/springwolf-amqp-example/src/main/java/io/github/stavshamir/springwolf/example/amqp/configuration/AsyncApiConfiguration.java"},"AMQP Example")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/springwolf/springwolf-core/blob/master/springwolf-examples/springwolf-cloud-stream-example/src/main/java/io/github/stavshamir/springwolf/example/cloudstream/configuration/AsyncApiConfiguration.java"},"Cloud Stream Example")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/springwolf/springwolf-core/blob/master/springwolf-examples/springwolf-kafka-example/src/main/java/io/github/stavshamir/springwolf/example/kafka/configuration/AsyncApiConfiguration.java"},"Kafka Example"))))}c.isMDXComponent=!0}}]);